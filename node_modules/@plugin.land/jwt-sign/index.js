
// https://auth0.com/docs/api-auth/tutorials/verify-access-token
// https://github.com/auth0/node-jsonwebtoken
// https://auth0.com/docs/architecture-scenarios/application/spa-api/part-2#configure-the-authorization-extension
// https://auth0.com/docs/architecture-scenarios/application/spa-api/part-3
// https://stackoverflow.com/questions/22584268/node-js-https-pem-error-routinespem-read-biono-start-line

var jwt = require('jsonwebtoken')
var ms = require('ms')

/**
 * JWT token created after a user logins passing openid scope to /authorize,
 * or after they authorize.
 */

module.exports = function(state, action) {
  var cert = state.resolve(action.input['Private SSL certificate'])
  var audience = state.resolve(action.input['Audience'])
  var expiresIn = state.resolve(action.input['Expires in'])
  var issuer = state.resolve(action.input['Issuer'])
  var user = state.resolve(action.input['User'])
  var data = state.resolve(action.input['Data']) || {}
  var password = state.resolve(action.input['Private SSL password'])
  var id = action.input.ID
  // var cert = fs.readFileSync('private.key')  // get private key
  var options = {
    algorithm: 'RS256',
    subject: user,
    audience: audience,
    expiresIn: ms(expiresIn),
    issuer: issuer,
    jwtid: id
  }
  var token = jwt.sign(data, { key: cert, passphrase: password }, options)
  return token
}
