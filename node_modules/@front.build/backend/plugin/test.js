
var assert = require('assert')
var API = require('../api')
var persistState = require('./persist-state')
var accessState = require('./access-state')
var updateState = require('./update-state')
var minifyJS = require('./minify-js')
var minifyCSS = require('./minify-css')
var npmInstall = require('./NPM-install')
var herokuCreateApp = require('./Heroku-create-app')
var mongodbInitialize = require('./MongoDB-initialize')
var runCommand = require('./run-command')
var requestJSON = require('./request-json')
var requestHTTP = require('./request-http')
var s3initialize = require('./S3-initialize')
var s3UploadToBucket = require('./S3-upload-to-bucket')
var webpackCreateBuild = require('./Webpack-create-build')

var api = new API({
  'MongoDB initialize': mongodbInitialize,
  'Persist state': persistState,
  'Access state': accessState,
  'Minify JS': minifyJS,
  'Minify CSS': minifyCSS,
  'NPM install': npmInstall,
  'Run command': runCommand,
  'Update state': updateState,
  'Request JSON': requestJSON,
  'Request HTTP': requestHTTP,
  'Heroku create app': herokuCreateApp,
  'S3 initialize': s3initialize,
  'S3 upload to bucket': s3UploadToBucket,
  'Webpack create build': webpackCreateBuild
})

describe('Plugin', function(){
  it('persist-state', function(done){
    api.dispatch({
      type: 'Persist state',
      input: {
        Changes: {
          User: {
            1: {
              email: 'foo@example.com'
            }
          }
        }
      }
    }, done)
  })

  it('access-state', function(done){
    api.dispatch({
      type: 'Access state',
      input: {
        'Property name': 'User[id]/1'
      }
    }, function(err, user){
      assert.deepEqual(user, { email: 'foo@example.com' })
      done()
    })
  })

  it('minify-js', function(){
    var code = api.dispatch({
      type: 'Minify JS',
      input: {
        'Source code': 'var x = 10'
      }
    })
    assert.equal('var x=10;', code)
  })

  it('minify-css', function(){
    var code = api.dispatch({
      type: 'Minify CSS',
      input: {
        'Source code': 'p { background: red; }'
      }
    })
    assert.equal('p{background:red}', code)
  })

  it.only('NPM-install', function(done){
    api.dispatch({
      type: 'NPM install'
    }, done)
  })

  it('Heroku-create-app', function(done){
    herokuCreateApp(done)
  })
})
