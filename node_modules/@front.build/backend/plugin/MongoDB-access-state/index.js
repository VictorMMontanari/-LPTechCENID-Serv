
// Get state, Query state, remote: true
module.exports = function(state, action, callback) {
  var uri = action.input['Mongo URI']

  var dbaction = {
    type: 'MongoDB initialize',
    input: {
      'Mongo URI': uri
    }
  }

  state.dispatch(dbaction, function(err, db){
    if (action.input['Property name']) {
      getOne(db, action.input['Property name'], callback)
    } else {
      getMany(db, action, callback)
    }
  })
}

function getMany(db, action, callback) {
  var properties = action.input['Properties']
  var records = []
  next(0)
  function next(i) {
    var property = properties[i]
    if (!property) return callback(null, records)
    var name = property['Property name']
    getOne(db, name, (err, doc) => {
      records.push(doc)
      next(i + 1)
    })
  }
}

function getOne(db, property, callback) {
  // User/123/Profile
  var fragments = property.split('/')
  var collection = fragments.shift()
  var id = fragments.shift()
  var field = fragments.join('.')
  var select = {}
  select[field] = 1
  var cursor = db.collection(collection).findOne({ _id: id })
  if (field) cursor = cursor.project(select)
  cursor.then(function(result) {
    var i = 0
    while (i < fragments.length) {
      var field = fragments[i]
      if (result) result = result[field]
      i++
    }
    callback(null, result)
  })
}
